/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import jdbc.Connexion;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Sarah LOTFI
 */
public class EspaceChef extends javax.swing.JPanel {
        private int IdUser;
    Connexion con = new Connexion();
   Connection Maconnexion;
//   DefaultTableModel dm;
    /**
     * Creates new form EspaceChef
     */
    public EspaceChef(int Id) {
        initComponents();
        IdUser=Id;
        Maconnexion = con.getMaconnexion();
        updateJtable11_Event();
        updateJtable12_Event();
        updateJtable13_Event();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EspaceChef = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        DiscoChef = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        CreatEventButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Tous", jPanel13);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Publics", jPanel21);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Privés", jPanel22);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Mes participations", jPanel23);

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Mes événements", jPanel25);

        jTextField9.setText("Rechercher");
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField9KeyPressed(evt);
            }
        });

        DiscoChef.setText("Déconnexion");
        DiscoChef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiscoChefActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel3.setText("Evénements");

        jLabel9.setText("Trier les événements par:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Titre", "Secteur", "Thème", "Date", "Lieu", "Organisateur" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        CreatEventButton.setText("Créer un événement");
        CreatEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreatEventButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EspaceChefLayout = new javax.swing.GroupLayout(EspaceChef);
        EspaceChef.setLayout(EspaceChefLayout);
        EspaceChefLayout.setHorizontalGroup(
            EspaceChefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EspaceChefLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162)
                .addComponent(DiscoChef)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EspaceChefLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(EspaceChefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EspaceChefLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EspaceChefLayout.createSequentialGroup()
                        .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(CreatEventButton)
                        .addGap(146, 146, 146))))
        );
        EspaceChefLayout.setVerticalGroup(
            EspaceChefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EspaceChefLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EspaceChefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EspaceChefLayout.createSequentialGroup()
                        .addGroup(EspaceChefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DiscoChef))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(EspaceChefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(EspaceChefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EspaceChefLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EspaceChefLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(CreatEventButton)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 949, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(EspaceChef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(31, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(EspaceChef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DiscoChefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiscoChefActionPerformed
        SwingUtilities.getWindowAncestor(this).dispose();
        JOptionPane.showMessageDialog(null ,"Au revoir!! CHEF" );
        GUI G=new GUI();
        Authentify A=new Authentify();
        A.setSize(1300, 500);
        G.add(A);
        G.setSize(500, 500);
        G.setVisible(true);
    }//GEN-LAST:event_DiscoChefActionPerformed

//       private void Trier(String filtre) {
//        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<> (dm);
//        jTable11.setRowSorter(tr);
//        jTable12.setRowSorter(tr);
//        jTable13.setRowSorter(tr);
//        tr.setRowFilter(RowFilter.regexFilter(filtre));
//    }
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
//      String choix = jComboBox1.getSelectedItem().toString();
//     if (jPanel13.isEnabled())  { dm = (DefaultTableModel) jTable11.getModel();   Trier(choix); }
//      if (jPanel21.isEnabled())  { dm = (DefaultTableModel) jTable12.getModel();  Trier(choix); }
//       if (jPanel22.isEnabled())  { dm = (DefaultTableModel) jTable13.getModel(); Trier(choix); }
//         Statement St ;
//        ResultSet Rs = null ;
//        String choix = jComboBox1.getSelectedItem().toString();   
//       switch (choix)
//       {
//           case "Titre" :  if( jPanel13.isEnabled()) { try {     // trie TOUS par titre
//            St =Maconnexion.createStatement();
//            Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID order by Titre ");
//           jTable11.setModel(DbUtils.resultSetToTableModel(Rs));
//        }
//        catch (SQLException ex) { JOptionPane.showMessageDialog(null ,"Pb dans la requete de selection !! "+ex.getMessage(),"Warning",JOptionPane.WARNING_MESSAGE);
//        }} 
//            if (jPanel21.isEnabled()) { try {    //trie PUBLICS par titre
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'public'");
//         jTable12.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }
//            if (jPanel22.isEnabled()) {      try {    //trie PRIVES par titre
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'privé'");
//         jTable13.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }     
//                   }
//               
//           }
//           case "Thème" :  if( jPanel13.isEnabled()){try {    //trie TOUS par thème
//               St = Maconnexion.createStatement();
//               Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID order by Thème ");
//           jTable11.setModel(DbUtils.resultSetToTableModel(Rs));
//        }
//        catch (SQLException ex) { JOptionPane.showMessageDialog(null ,"Pb dans la requete de selection !! "+ex.getMessage(),"Warning",JOptionPane.WARNING_MESSAGE);
//        }
//           }
//          if (jPanel21.isEnabled()) { try {    //trie PUBLICS par thème
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'public' order by Thème");
//         jTable12.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      } 
//          }
//           if (jPanel22.isEnabled())  {  try {   //trie PRIVES par thème
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'privé' order by Thème");
//         jTable13.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }
//           }
//           
//           case "Secteur" : if( jPanel13.isEnabled()){try {   //trie TOUS par secteur
//            St =Maconnexion.createStatement();
//            Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID order by Secteur ");
//           jTable11.setModel(DbUtils.resultSetToTableModel(Rs));
//        }
//        catch (SQLException ex) { JOptionPane.showMessageDialog(null ,"Pb dans la requete de selection !! "+ex.getMessage(),"Warning",JOptionPane.WARNING_MESSAGE);
//        }
//           }
//          if (jPanel21.isEnabled()) { try {   //trie PUBLICS par secteur
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'public' order by Secteur");
//         jTable12.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      } 
//          }
//           if (jPanel22.isEnabled())  {  try {   //trie PRIVES par secteur
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'privé' order by Secteur");
//         jTable13.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }
//           }
//           case "Date" : if( jPanel13.isEnabled()){try {    //trie TOUS par date
//            St =Maconnexion.createStatement();
//            Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID order by DateEvent ");
//           jTable11.setModel(DbUtils.resultSetToTableModel(Rs));
//        }
//        catch (SQLException ex) { JOptionPane.showMessageDialog(null ,"Pb dans la requete de selection !! "+ex.getMessage(),"Warning",JOptionPane.WARNING_MESSAGE);
//        }
//           }
//          if (jPanel21.isEnabled()) { try {    //trie PUBLICS par date
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'public' order by DateEvent");
//         jTable12.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      } 
//          }
//           if (jPanel22.isEnabled())  {  try {     //trie PRIVES par date
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'privé' order by DateEvent");
//         jTable13.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }
//           }
//           
//           case "Lieu" :   if( jPanel13.isEnabled()){try {    //trie TOUS par lieu
//            St =Maconnexion.createStatement();
//            Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID order by Lieu ");
//           jTable11.setModel(DbUtils.resultSetToTableModel(Rs));
//        }
//        catch (SQLException ex) { JOptionPane.showMessageDialog(null ,"Pb dans la requete de selection !! "+ex.getMessage(),"Warning",JOptionPane.WARNING_MESSAGE);
//        }
//           }
//          if (jPanel21.isEnabled()) { try {    //trie PUBLICS par Lieu
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'public' order by Lieu");
//         jTable12.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      } 
//          }
//           if (jPanel22.isEnabled())  {  try {     //trie PRIVES par Lieu
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'privé' order by Lieu");
//         jTable13.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }
//           }
//           
//           case "Organisateur" :  if( jPanel13.isEnabled()){try {    //trie TOUS par organisateur
//            St =Maconnexion.createStatement();
//            Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID order by Organisateur ");
//           jTable11.setModel(DbUtils.resultSetToTableModel(Rs));
//        }
//        catch (SQLException ex) { JOptionPane.showMessageDialog(null ,"Pb dans la requete de selection !! "+ex.getMessage(),"Warning",JOptionPane.WARNING_MESSAGE);
//        }
//           }
//          if (jPanel21.isEnabled()) { try {    //trie PUBLICS par Organisateur
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'public' order by Organisateur");
//         jTable12.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      } 
//          }
//           if (jPanel22.isEnabled())  {  try {     //trie PRIVES par Organisateur
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'privé' order by Organisateur");
//         jTable13.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }
//           }
//       }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed

    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyPressed
          if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        String Saisie = jTextField9.getText();
         Statement St ;
         ResultSet Rs = null ;
                
          }
    }//GEN-LAST:event_jTextField9KeyPressed

    private void CreatEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreatEventButtonActionPerformed
        SwingUtilities.getWindowAncestor(this).enable(false);
        SwingUtilities.getWindowAncestor(this).enable();
        GUI G=new GUI();
        CreateEvent C=new CreateEvent();
        C.setSize(1300, 500);
        G.add(C);
        G.setSize(500, 500);
        G.setVisible(true);
    }//GEN-LAST:event_CreatEventButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreatEventButton;
    private javax.swing.JButton DiscoChef;
    private javax.swing.JPanel EspaceChef;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    private void updateJtable11_Event() {
//        Statement St ;
//        ResultSet Rs = null ;
//        try {
//            St =Maconnexion.createStatement();
//            Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent Date,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID");
//           jTable11.setModel(DbUtils.resultSetToTableModel(Rs));
//        }
//        catch (SQLException ex) { JOptionPane.showMessageDialog(null ,"Pb dans la requete de selection !! "+ex.getMessage(),"Warning",JOptionPane.WARNING_MESSAGE);}
    }

    private void updateJtable12_Event() {
//      Statement St;
//      ResultSet Rs = null;
//      try {
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent Date,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'public'");
//         jTable12.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }
      }

    private void updateJtable13_Event() {
//        Statement St;
//      ResultSet Rs = null;
//      try {
//          St = Maconnexion.createStatement();
//          Rs = St.executeQuery("select Titre,Secteur,Thème,DateEvent Date,Lieu,Description,concat( Nom,' ', Prenom) as Organisateur from event,employe where event.IDorg = employe.ID and event.Type = 'privé'");
//         jTable13.setModel(DbUtils.resultSetToTableModel(Rs));
//      }
//      catch (SQLException ex) { JOptionPane.showMessageDialog(null, "Pb dans la requete de selection !! "+ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
//      }
    }

 
    }

